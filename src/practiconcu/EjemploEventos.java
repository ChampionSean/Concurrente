

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.Point;
import java.util.LinkedList;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 * Ejemplifica el uso de eventos en Java Swing.
 * @author <a href="mailto:manuel_castillo_cc@ciencias.unam.mx" >Manuel
 * "nachintoch" Castillo</a>
 * @version 1.0, august 2016
 * @since Computaci&oacute;n Concurrente 2017-1
 */
public class EjemploEventos extends JFrame {

    // métodos constructores
    
    /**
     * Inicializa la ventana y sus componentes.
     * @since Ejemplo Eventos 1.0, august 2016
     */
    public EjemploEventos() {
        initComponents();
        SQUARES = new LinkedList<>();
    }//constructor por omisión

    // métodos de implementación
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonEjemplo = new JButton();
        workArea = new WorkArea();
        responsesLabel = new JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ejemplo de Eventos Swing");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("window"); // NOI18N
        setPreferredSize(new java.awt.Dimension(500, 500));
        setResizable(false);
        setSize(new java.awt.Dimension(500, 500));

        botonEjemplo.setText("Bot\u00F3n sin presionar");
        botonEjemplo.setToolTipText("Da click aqu\u00ED");
        botonEjemplo.setActionCommand("boton-presionado");
        botonEjemplo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonEjemplo.setName("botonEjemplo"); // NOI18N
        botonEjemplo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEjemploActionPerformed(evt);
            }
        });

        workArea.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        workArea.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                EjemploEventos.this.mouseMoved(evt);
            }
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                EjemploEventos.this.mouseDragged(evt);
            }
        });
        workArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                EjemploEventos.this.mousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                EjemploEventos.this.mouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseDragged(evt);
                EjemploEventos.this.mouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EjemploEventos.this.mouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EjemploEventos.this.mouseEntered(evt);
            }
        });

        javax.swing.GroupLayout workAreaLayout = new javax.swing.GroupLayout(workArea);
        workArea.setLayout(workAreaLayout);
        workAreaLayout.setHorizontalGroup(
            workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        workAreaLayout.setVerticalGroup(
            workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 245, Short.MAX_VALUE)
        );

        responsesLabel.setText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(workArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonEjemplo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(responsesLabel)
                        .addGap(0, 144, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(workArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonEjemplo)
                    .addComponent(responsesLabel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonEjemploActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEjemploActionPerformed
        botonEjemplo.setText("Bot\u00F3n presionado " +(countEr++) +" veces");
    }//GEN-LAST:event_botonEjemploActionPerformed

    private void mouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseDragged
        if(movingSquare == null) {
            return;
        }//solo nos interesa cuando se arrastra un cuadrado
        movingSquare.x = evt.getX();
        movingSquare.y = evt.getY();
        workArea.repaint();
    }//GEN-LAST:event_mouseDragged

    private void mouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseEntered
        responsesLabel.setText("Bienvenido al \u00E1rea de trabajo");
    }//GEN-LAST:event_mouseEntered

    private void mouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseExited
        responsesLabel.setText("Gracias por su preferencia. Vuelva pronto");
    }//GEN-LAST:event_mouseExited

    private void mouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseMoved
        if(SQUARES.isEmpty()) {
            System.out.println("Puedes manipular la consola a\u00FAn en "
                    + "entornos gr\u00E1ficos");
        }//no queremos llenar la consola de basura... o sí?
    }//GEN-LAST:event_mouseMoved

    private void mousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mousePressed
        for(Point square : SQUARES) {
            if(evt.getX() >= square.x && evt.getY() >= square.y &&
                    evt.getX() <= square.x +SQUARE_SIZE &&
                    evt.getY() <= square.y +SQUARE_SIZE) {
                responsesLabel.setText("Cuadro seleccionado");
                movingSquare = square;
                return;
            }//checa si el click fue sobre un cuadrado
        }//busca un cuadrado sobre el que se de click
        movingSquare = null;
    }//GEN-LAST:event_mousePressed

    private void mouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseReleased
        if(movingSquare != null) {
            responsesLabel.setText("Cuadrado soltado");
        }// si se estaba moviendo un cuadrado
        movingSquare = null;
    }//GEN-LAST:event_mouseReleased

    private void mouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseClicked
        if(evt.getClickCount() > 1) {
            responsesLabel.setText("Doble click");
            return;
        }//si hubo más de un click
        SQUARES.add(new Point(evt.getX(), evt.getY()));
        workArea.repaint();
    }//GEN-LAST:event_mouseClicked

    // método main
    
    /**
     * Inicia la aplicaci&oacute;n: crea una ventana con un área de trabajo
     * que responde a todos los eventos de rat&oacute;n definidos en la interfaz
     * <i>MouseInputListener</i>.
     * @param args - sin uso
     * @since Ejemplo de Eventos 1.0, august 2016
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EjemploEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EjemploEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EjemploEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EjemploEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new EjemploEventos().setVisible(true);
            }//run
        });
    }//main

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEjemplo;
    private javax.swing.JLabel responsesLabel;
    private javax.swing.JPanel workArea;
    // End of variables declaration//GEN-END:variables
    /**
     * Cuenta cuantas veces se ha dado click en el bot&oacute;n de ejemplo.
     * Buena suerte desbord&aacute;ndolo.
     * @since Ejemplo de Eventos 1.0, august 2016
     */
    private long countEr;
    
    /**
     * Referencia al cuadrado que se este arrastrando.
     * @since Ejemplo de Eventos 1.0, august, 2016
     */
    private Point movingSquare;
    
    /**
     * Contiene una lista de los cuadros que aparecen en pantalla al hacer click
     * sobre el &aacute;rea de trabajo. Los cuadrados ser&aacute; de un
     * tama&ntilde;o constante de 50x50 pixeles, por lo que solo har&aacute;
     * falta conocer su posici&oacute;n en el &aacute;rea de trabajo.
     * @since Ejemplo de Eventos 1.0, august 2016
     */
    private final LinkedList<Point> SQUARES;
    
    /**
     * Representa el tama&ntilde;o de los cuadrados a dibujar en el &aacute;rea
     * de trabajo.
     */
    private static final byte SQUARE_SIZE = 50;
    
    // clases anidadas
    
    /**
     * Clase personalizada de JPanel que modela el &aacute;rea de trabajo de
     * nuestra aplicaci&oacute;n. Pinta una serie de cuadros que aparecen en
     * pantalla al hace click en el &aacute;rea de trabajo. El usuario
     * tambi&eacute;n podr&aacute; arrastrar los cuadros por el &aacute;rea de
     * trabajo al hacer click sobre ellos.
     * @author <a href="mailto:manuel_castillo_cc@ciencias.unam.mx" >Manuel
     * "nachintoch" Castillo</a>
     * @version 1.0, august 2016
     * @since Ejemplo de Eventos 1.0, august 2016
     */
    private class WorkArea extends JPanel {
        
        @Override
        public void paintComponent(Graphics g) {
            g.setColor(Color.WHITE);
            g.fillRect(0, 0, this.getWidth(), this.getHeight());
            g.setColor(Color.BLUE);
            for(Point square : SQUARES) {
                g.fillRect(square.x, square.y, SQUARE_SIZE, SQUARE_SIZE);
            }//dibuja los cuadrados*/
        }//paintComponent
        
    }//Work Area class
    
}//clase Ejemplo Eventos
